#include "model.hpp"
void Model::start(aiv::indx<3> offset){
    auto data_crop = data.crop( offset, data.N, Indx(1,1,1));
    auto I=aiv::indx<3>(0);
    double X = offset[0];
    double Y = offset[1];
    double Z = offset[2];
    data_crop[I+Indx(0,0,0)].H = Vctr(0, 0, 0);
    data_crop[I+Indx(0,0,0)].m = Init_m;
}
void Model::calc_means(){
    auto data_crop = data;
    M1m = Vctr(0,0,0);
    for(auto I=aiv::indx<3>(0); I.less(data.N); ++I){
        M1m += data_crop[I+Indx(0,0,0)].m;
    };
    M1m /= data.N.volume();
}
void Model::calc_cone_all(double init_time,aiv::indx<3> offset){
    double time = init_time;
    auto data_crop = data.crop( offset, data.N, Indx(1,1,1));
    auto I=aiv::indx<3>(0);
    double X = offset[0];
    double Y = offset[1];
    double Z = offset[2];
    data_crop[I+Indx(0,0,0)].H = J*(data_crop[I+Indx(2,0,0)].m+data_crop[I+Indx(1,0,0)].m+data_crop[I+Indx(0,2,0)].m+data_crop[I+Indx(0,1,0)].m+data_crop[I+Indx(0,0,2)].m+data_crop[I+Indx(0,0,1)].m)+H_ext;
    data_crop[I+Indx(1,0,0)].H = J*(data_crop[I+Indx(0,0,0)].m+data_crop[I+Indx(2,0,0)].m+data_crop[I+Indx(1,2,0)].m+data_crop[I+Indx(1,1,0)].m+data_crop[I+Indx(1,0,2)].m+data_crop[I+Indx(1,0,1)].m)+H_ext;
    data_crop[I+Indx(2,0,0)].H = J*(data_crop[I+Indx(1,0,0)].m+data_crop[I+Indx(0,0,0)].m+data_crop[I+Indx(2,2,0)].m+data_crop[I+Indx(2,1,0)].m+data_crop[I+Indx(2,0,2)].m+data_crop[I+Indx(2,0,1)].m)+H_ext;
    data_crop[I+Indx(0,1,0)].H = J*(data_crop[I+Indx(2,1,0)].m+data_crop[I+Indx(1,1,0)].m+data_crop[I+Indx(0,0,0)].m+data_crop[I+Indx(0,2,0)].m+data_crop[I+Indx(0,1,2)].m+data_crop[I+Indx(0,1,1)].m)+H_ext;
    data_crop[I+Indx(1,1,0)].H = J*(data_crop[I+Indx(0,1,0)].m+data_crop[I+Indx(2,1,0)].m+data_crop[I+Indx(1,0,0)].m+data_crop[I+Indx(1,2,0)].m+data_crop[I+Indx(1,1,2)].m+data_crop[I+Indx(1,1,1)].m)+H_ext;
    data_crop[I+Indx(2,1,0)].H = J*(data_crop[I+Indx(1,1,0)].m+data_crop[I+Indx(0,1,0)].m+data_crop[I+Indx(2,0,0)].m+data_crop[I+Indx(2,2,0)].m+data_crop[I+Indx(2,1,2)].m+data_crop[I+Indx(2,1,1)].m)+H_ext;
    data_crop[I+Indx(0,2,0)].H = J*(data_crop[I+Indx(2,2,0)].m+data_crop[I+Indx(1,2,0)].m+data_crop[I+Indx(0,1,0)].m+data_crop[I+Indx(0,0,0)].m+data_crop[I+Indx(0,2,2)].m+data_crop[I+Indx(0,2,1)].m)+H_ext;
    data_crop[I+Indx(1,2,0)].H = J*(data_crop[I+Indx(0,2,0)].m+data_crop[I+Indx(2,2,0)].m+data_crop[I+Indx(1,1,0)].m+data_crop[I+Indx(1,0,0)].m+data_crop[I+Indx(1,2,2)].m+data_crop[I+Indx(1,2,1)].m)+H_ext;
    data_crop[I+Indx(2,2,0)].H = J*(data_crop[I+Indx(1,2,0)].m+data_crop[I+Indx(0,2,0)].m+data_crop[I+Indx(2,1,0)].m+data_crop[I+Indx(2,0,0)].m+data_crop[I+Indx(2,2,2)].m+data_crop[I+Indx(2,2,1)].m)+H_ext;
    data_crop[I+Indx(0,0,1)].H = J*(data_crop[I+Indx(2,0,1)].m+data_crop[I+Indx(1,0,1)].m+data_crop[I+Indx(0,2,1)].m+data_crop[I+Indx(0,1,1)].m+data_crop[I+Indx(0,0,0)].m+data_crop[I+Indx(0,0,2)].m)+H_ext;
    data_crop[I+Indx(1,0,1)].H = J*(data_crop[I+Indx(0,0,1)].m+data_crop[I+Indx(2,0,1)].m+data_crop[I+Indx(1,2,1)].m+data_crop[I+Indx(1,1,1)].m+data_crop[I+Indx(1,0,0)].m+data_crop[I+Indx(1,0,2)].m)+H_ext;
    data_crop[I+Indx(2,0,1)].H = J*(data_crop[I+Indx(1,0,1)].m+data_crop[I+Indx(0,0,1)].m+data_crop[I+Indx(2,2,1)].m+data_crop[I+Indx(2,1,1)].m+data_crop[I+Indx(2,0,0)].m+data_crop[I+Indx(2,0,2)].m)+H_ext;
    data_crop[I+Indx(0,1,1)].H = J*(data_crop[I+Indx(2,1,1)].m+data_crop[I+Indx(1,1,1)].m+data_crop[I+Indx(0,0,1)].m+data_crop[I+Indx(0,2,1)].m+data_crop[I+Indx(0,1,0)].m+data_crop[I+Indx(0,1,2)].m)+H_ext;
    data_crop[I+Indx(1,1,1)].H = J*(data_crop[I+Indx(0,1,1)].m+data_crop[I+Indx(2,1,1)].m+data_crop[I+Indx(1,0,1)].m+data_crop[I+Indx(1,2,1)].m+data_crop[I+Indx(1,1,0)].m+data_crop[I+Indx(1,1,2)].m)+H_ext;
    data_crop[I+Indx(2,1,1)].H = J*(data_crop[I+Indx(1,1,1)].m+data_crop[I+Indx(0,1,1)].m+data_crop[I+Indx(2,0,1)].m+data_crop[I+Indx(2,2,1)].m+data_crop[I+Indx(2,1,0)].m+data_crop[I+Indx(2,1,2)].m)+H_ext;
    data_crop[I+Indx(0,2,1)].H = J*(data_crop[I+Indx(2,2,1)].m+data_crop[I+Indx(1,2,1)].m+data_crop[I+Indx(0,1,1)].m+data_crop[I+Indx(0,0,1)].m+data_crop[I+Indx(0,2,0)].m+data_crop[I+Indx(0,2,2)].m)+H_ext;
    data_crop[I+Indx(1,2,1)].H = J*(data_crop[I+Indx(0,2,1)].m+data_crop[I+Indx(2,2,1)].m+data_crop[I+Indx(1,1,1)].m+data_crop[I+Indx(1,0,1)].m+data_crop[I+Indx(1,2,0)].m+data_crop[I+Indx(1,2,2)].m)+H_ext;
    data_crop[I+Indx(2,2,1)].H = J*(data_crop[I+Indx(1,2,1)].m+data_crop[I+Indx(0,2,1)].m+data_crop[I+Indx(2,1,1)].m+data_crop[I+Indx(2,0,1)].m+data_crop[I+Indx(2,2,0)].m+data_crop[I+Indx(2,2,2)].m)+H_ext;
    data_crop[I+Indx(0,0,2)].H = J*(data_crop[I+Indx(2,0,2)].m+data_crop[I+Indx(1,0,2)].m+data_crop[I+Indx(0,2,2)].m+data_crop[I+Indx(0,1,2)].m+data_crop[I+Indx(0,0,1)].m+data_crop[I+Indx(0,0,0)].m)+H_ext;
    data_crop[I+Indx(1,0,2)].H = J*(data_crop[I+Indx(0,0,2)].m+data_crop[I+Indx(2,0,2)].m+data_crop[I+Indx(1,2,2)].m+data_crop[I+Indx(1,1,2)].m+data_crop[I+Indx(1,0,1)].m+data_crop[I+Indx(1,0,0)].m)+H_ext;
    data_crop[I+Indx(2,0,2)].H = J*(data_crop[I+Indx(1,0,2)].m+data_crop[I+Indx(0,0,2)].m+data_crop[I+Indx(2,2,2)].m+data_crop[I+Indx(2,1,2)].m+data_crop[I+Indx(2,0,1)].m+data_crop[I+Indx(2,0,0)].m)+H_ext;
    data_crop[I+Indx(0,1,2)].H = J*(data_crop[I+Indx(2,1,2)].m+data_crop[I+Indx(1,1,2)].m+data_crop[I+Indx(0,0,2)].m+data_crop[I+Indx(0,2,2)].m+data_crop[I+Indx(0,1,1)].m+data_crop[I+Indx(0,1,0)].m)+H_ext;
    data_crop[I+Indx(1,1,2)].H = J*(data_crop[I+Indx(0,1,2)].m+data_crop[I+Indx(2,1,2)].m+data_crop[I+Indx(1,0,2)].m+data_crop[I+Indx(1,2,2)].m+data_crop[I+Indx(1,1,1)].m+data_crop[I+Indx(1,1,0)].m)+H_ext;
    data_crop[I+Indx(2,1,2)].H = J*(data_crop[I+Indx(1,1,2)].m+data_crop[I+Indx(0,1,2)].m+data_crop[I+Indx(2,0,2)].m+data_crop[I+Indx(2,2,2)].m+data_crop[I+Indx(2,1,1)].m+data_crop[I+Indx(2,1,0)].m)+H_ext;
    data_crop[I+Indx(0,2,2)].H = J*(data_crop[I+Indx(2,2,2)].m+data_crop[I+Indx(1,2,2)].m+data_crop[I+Indx(0,1,2)].m+data_crop[I+Indx(0,0,2)].m+data_crop[I+Indx(0,2,1)].m+data_crop[I+Indx(0,2,0)].m)+H_ext;
    data_crop[I+Indx(1,2,2)].H = J*(data_crop[I+Indx(0,2,2)].m+data_crop[I+Indx(2,2,2)].m+data_crop[I+Indx(1,1,2)].m+data_crop[I+Indx(1,0,2)].m+data_crop[I+Indx(1,2,1)].m+data_crop[I+Indx(1,2,0)].m)+H_ext;
    data_crop[I+Indx(2,2,2)].H = J*(data_crop[I+Indx(1,2,2)].m+data_crop[I+Indx(0,2,2)].m+data_crop[I+Indx(2,1,2)].m+data_crop[I+Indx(2,0,2)].m+data_crop[I+Indx(2,2,1)].m+data_crop[I+Indx(2,2,0)].m)+H_ext;
    data_crop[I+Indx(0,0,0)].m = data_crop[I+Indx(0,0,0)].m-h*(gamma*data_crop[I+Indx(0,0,0)].m%data_crop[I+Indx(0,0,0)].H+alpha*data_crop[I+Indx(0,0,0)].m%(data_crop[I+Indx(0,0,0)].m%data_crop[I+Indx(0,0,0)].H));
    data_crop[I+Indx(1,0,0)].m = data_crop[I+Indx(1,0,0)].m-h*(gamma*data_crop[I+Indx(1,0,0)].m%data_crop[I+Indx(1,0,0)].H+alpha*data_crop[I+Indx(1,0,0)].m%(data_crop[I+Indx(1,0,0)].m%data_crop[I+Indx(1,0,0)].H));
    data_crop[I+Indx(2,0,0)].m = data_crop[I+Indx(2,0,0)].m-h*(gamma*data_crop[I+Indx(2,0,0)].m%data_crop[I+Indx(2,0,0)].H+alpha*data_crop[I+Indx(2,0,0)].m%(data_crop[I+Indx(2,0,0)].m%data_crop[I+Indx(2,0,0)].H));
    data_crop[I+Indx(0,1,0)].m = data_crop[I+Indx(0,1,0)].m-h*(gamma*data_crop[I+Indx(0,1,0)].m%data_crop[I+Indx(0,1,0)].H+alpha*data_crop[I+Indx(0,1,0)].m%(data_crop[I+Indx(0,1,0)].m%data_crop[I+Indx(0,1,0)].H));
    data_crop[I+Indx(1,1,0)].m = data_crop[I+Indx(1,1,0)].m-h*(gamma*data_crop[I+Indx(1,1,0)].m%data_crop[I+Indx(1,1,0)].H+alpha*data_crop[I+Indx(1,1,0)].m%(data_crop[I+Indx(1,1,0)].m%data_crop[I+Indx(1,1,0)].H));
    data_crop[I+Indx(2,1,0)].m = data_crop[I+Indx(2,1,0)].m-h*(gamma*data_crop[I+Indx(2,1,0)].m%data_crop[I+Indx(2,1,0)].H+alpha*data_crop[I+Indx(2,1,0)].m%(data_crop[I+Indx(2,1,0)].m%data_crop[I+Indx(2,1,0)].H));
    data_crop[I+Indx(0,2,0)].m = data_crop[I+Indx(0,2,0)].m-h*(gamma*data_crop[I+Indx(0,2,0)].m%data_crop[I+Indx(0,2,0)].H+alpha*data_crop[I+Indx(0,2,0)].m%(data_crop[I+Indx(0,2,0)].m%data_crop[I+Indx(0,2,0)].H));
    data_crop[I+Indx(1,2,0)].m = data_crop[I+Indx(1,2,0)].m-h*(gamma*data_crop[I+Indx(1,2,0)].m%data_crop[I+Indx(1,2,0)].H+alpha*data_crop[I+Indx(1,2,0)].m%(data_crop[I+Indx(1,2,0)].m%data_crop[I+Indx(1,2,0)].H));
    data_crop[I+Indx(2,2,0)].m = data_crop[I+Indx(2,2,0)].m-h*(gamma*data_crop[I+Indx(2,2,0)].m%data_crop[I+Indx(2,2,0)].H+alpha*data_crop[I+Indx(2,2,0)].m%(data_crop[I+Indx(2,2,0)].m%data_crop[I+Indx(2,2,0)].H));
    data_crop[I+Indx(0,0,1)].m = data_crop[I+Indx(0,0,1)].m-h*(gamma*data_crop[I+Indx(0,0,1)].m%data_crop[I+Indx(0,0,1)].H+alpha*data_crop[I+Indx(0,0,1)].m%(data_crop[I+Indx(0,0,1)].m%data_crop[I+Indx(0,0,1)].H));
    data_crop[I+Indx(1,0,1)].m = data_crop[I+Indx(1,0,1)].m-h*(gamma*data_crop[I+Indx(1,0,1)].m%data_crop[I+Indx(1,0,1)].H+alpha*data_crop[I+Indx(1,0,1)].m%(data_crop[I+Indx(1,0,1)].m%data_crop[I+Indx(1,0,1)].H));
    data_crop[I+Indx(2,0,1)].m = data_crop[I+Indx(2,0,1)].m-h*(gamma*data_crop[I+Indx(2,0,1)].m%data_crop[I+Indx(2,0,1)].H+alpha*data_crop[I+Indx(2,0,1)].m%(data_crop[I+Indx(2,0,1)].m%data_crop[I+Indx(2,0,1)].H));
    data_crop[I+Indx(0,1,1)].m = data_crop[I+Indx(0,1,1)].m-h*(gamma*data_crop[I+Indx(0,1,1)].m%data_crop[I+Indx(0,1,1)].H+alpha*data_crop[I+Indx(0,1,1)].m%(data_crop[I+Indx(0,1,1)].m%data_crop[I+Indx(0,1,1)].H));
    data_crop[I+Indx(1,1,1)].m = data_crop[I+Indx(1,1,1)].m-h*(gamma*data_crop[I+Indx(1,1,1)].m%data_crop[I+Indx(1,1,1)].H+alpha*data_crop[I+Indx(1,1,1)].m%(data_crop[I+Indx(1,1,1)].m%data_crop[I+Indx(1,1,1)].H));
    data_crop[I+Indx(2,1,1)].m = data_crop[I+Indx(2,1,1)].m-h*(gamma*data_crop[I+Indx(2,1,1)].m%data_crop[I+Indx(2,1,1)].H+alpha*data_crop[I+Indx(2,1,1)].m%(data_crop[I+Indx(2,1,1)].m%data_crop[I+Indx(2,1,1)].H));
    data_crop[I+Indx(0,2,1)].m = data_crop[I+Indx(0,2,1)].m-h*(gamma*data_crop[I+Indx(0,2,1)].m%data_crop[I+Indx(0,2,1)].H+alpha*data_crop[I+Indx(0,2,1)].m%(data_crop[I+Indx(0,2,1)].m%data_crop[I+Indx(0,2,1)].H));
    data_crop[I+Indx(1,2,1)].m = data_crop[I+Indx(1,2,1)].m-h*(gamma*data_crop[I+Indx(1,2,1)].m%data_crop[I+Indx(1,2,1)].H+alpha*data_crop[I+Indx(1,2,1)].m%(data_crop[I+Indx(1,2,1)].m%data_crop[I+Indx(1,2,1)].H));
    data_crop[I+Indx(2,2,1)].m = data_crop[I+Indx(2,2,1)].m-h*(gamma*data_crop[I+Indx(2,2,1)].m%data_crop[I+Indx(2,2,1)].H+alpha*data_crop[I+Indx(2,2,1)].m%(data_crop[I+Indx(2,2,1)].m%data_crop[I+Indx(2,2,1)].H));
    data_crop[I+Indx(0,0,2)].m = data_crop[I+Indx(0,0,2)].m-h*(gamma*data_crop[I+Indx(0,0,2)].m%data_crop[I+Indx(0,0,2)].H+alpha*data_crop[I+Indx(0,0,2)].m%(data_crop[I+Indx(0,0,2)].m%data_crop[I+Indx(0,0,2)].H));
    data_crop[I+Indx(1,0,2)].m = data_crop[I+Indx(1,0,2)].m-h*(gamma*data_crop[I+Indx(1,0,2)].m%data_crop[I+Indx(1,0,2)].H+alpha*data_crop[I+Indx(1,0,2)].m%(data_crop[I+Indx(1,0,2)].m%data_crop[I+Indx(1,0,2)].H));
    data_crop[I+Indx(2,0,2)].m = data_crop[I+Indx(2,0,2)].m-h*(gamma*data_crop[I+Indx(2,0,2)].m%data_crop[I+Indx(2,0,2)].H+alpha*data_crop[I+Indx(2,0,2)].m%(data_crop[I+Indx(2,0,2)].m%data_crop[I+Indx(2,0,2)].H));
    data_crop[I+Indx(0,1,2)].m = data_crop[I+Indx(0,1,2)].m-h*(gamma*data_crop[I+Indx(0,1,2)].m%data_crop[I+Indx(0,1,2)].H+alpha*data_crop[I+Indx(0,1,2)].m%(data_crop[I+Indx(0,1,2)].m%data_crop[I+Indx(0,1,2)].H));
    data_crop[I+Indx(1,1,2)].m = data_crop[I+Indx(1,1,2)].m-h*(gamma*data_crop[I+Indx(1,1,2)].m%data_crop[I+Indx(1,1,2)].H+alpha*data_crop[I+Indx(1,1,2)].m%(data_crop[I+Indx(1,1,2)].m%data_crop[I+Indx(1,1,2)].H));
    data_crop[I+Indx(2,1,2)].m = data_crop[I+Indx(2,1,2)].m-h*(gamma*data_crop[I+Indx(2,1,2)].m%data_crop[I+Indx(2,1,2)].H+alpha*data_crop[I+Indx(2,1,2)].m%(data_crop[I+Indx(2,1,2)].m%data_crop[I+Indx(2,1,2)].H));
    data_crop[I+Indx(0,2,2)].m = data_crop[I+Indx(0,2,2)].m-h*(gamma*data_crop[I+Indx(0,2,2)].m%data_crop[I+Indx(0,2,2)].H+alpha*data_crop[I+Indx(0,2,2)].m%(data_crop[I+Indx(0,2,2)].m%data_crop[I+Indx(0,2,2)].H));
    data_crop[I+Indx(1,2,2)].m = data_crop[I+Indx(1,2,2)].m-h*(gamma*data_crop[I+Indx(1,2,2)].m%data_crop[I+Indx(1,2,2)].H+alpha*data_crop[I+Indx(1,2,2)].m%(data_crop[I+Indx(1,2,2)].m%data_crop[I+Indx(1,2,2)].H));
    data_crop[I+Indx(2,2,2)].m = data_crop[I+Indx(2,2,2)].m-h*(gamma*data_crop[I+Indx(2,2,2)].m%data_crop[I+Indx(2,2,2)].H+alpha*data_crop[I+Indx(2,2,2)].m%(data_crop[I+Indx(2,2,2)].m%data_crop[I+Indx(2,2,2)].H));
    data_crop[I+Indx(0,0,0)].m /= data_crop[I+Indx(0,0,0)].m.abs();
    data_crop[I+Indx(1,0,0)].m /= data_crop[I+Indx(1,0,0)].m.abs();
    data_crop[I+Indx(2,0,0)].m /= data_crop[I+Indx(2,0,0)].m.abs();
    data_crop[I+Indx(0,1,0)].m /= data_crop[I+Indx(0,1,0)].m.abs();
    data_crop[I+Indx(1,1,0)].m /= data_crop[I+Indx(1,1,0)].m.abs();
    data_crop[I+Indx(2,1,0)].m /= data_crop[I+Indx(2,1,0)].m.abs();
    data_crop[I+Indx(0,2,0)].m /= data_crop[I+Indx(0,2,0)].m.abs();
    data_crop[I+Indx(1,2,0)].m /= data_crop[I+Indx(1,2,0)].m.abs();
    data_crop[I+Indx(2,2,0)].m /= data_crop[I+Indx(2,2,0)].m.abs();
    data_crop[I+Indx(0,0,1)].m /= data_crop[I+Indx(0,0,1)].m.abs();
    data_crop[I+Indx(1,0,1)].m /= data_crop[I+Indx(1,0,1)].m.abs();
    data_crop[I+Indx(2,0,1)].m /= data_crop[I+Indx(2,0,1)].m.abs();
    data_crop[I+Indx(0,1,1)].m /= data_crop[I+Indx(0,1,1)].m.abs();
    data_crop[I+Indx(1,1,1)].m /= data_crop[I+Indx(1,1,1)].m.abs();
    data_crop[I+Indx(2,1,1)].m /= data_crop[I+Indx(2,1,1)].m.abs();
    data_crop[I+Indx(0,2,1)].m /= data_crop[I+Indx(0,2,1)].m.abs();
    data_crop[I+Indx(1,2,1)].m /= data_crop[I+Indx(1,2,1)].m.abs();
    data_crop[I+Indx(2,2,1)].m /= data_crop[I+Indx(2,2,1)].m.abs();
    data_crop[I+Indx(0,0,2)].m /= data_crop[I+Indx(0,0,2)].m.abs();
    data_crop[I+Indx(1,0,2)].m /= data_crop[I+Indx(1,0,2)].m.abs();
    data_crop[I+Indx(2,0,2)].m /= data_crop[I+Indx(2,0,2)].m.abs();
    data_crop[I+Indx(0,1,2)].m /= data_crop[I+Indx(0,1,2)].m.abs();
    data_crop[I+Indx(1,1,2)].m /= data_crop[I+Indx(1,1,2)].m.abs();
    data_crop[I+Indx(2,1,2)].m /= data_crop[I+Indx(2,1,2)].m.abs();
    data_crop[I+Indx(0,2,2)].m /= data_crop[I+Indx(0,2,2)].m.abs();
    data_crop[I+Indx(1,2,2)].m /= data_crop[I+Indx(1,2,2)].m.abs();
    data_crop[I+Indx(2,2,2)].m /= data_crop[I+Indx(2,2,2)].m.abs();
}